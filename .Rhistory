geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.2, size = 1.1)+
coord_flip() +
scale_x_discrete(labels = c('N2 \n daf-2 - ev','SKN-1 \n daf-2 - ev'))+
labs(
title = "",
x = "Treatment comparison (within strain)",
y = "Hazard ratio (HR)"
) +
scale_colour_manual(values = c('#4DBBD5FF','#3C5488FF'))+
theme_minimal(base_size = 12)+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.position = 'none')
CF_NM_contrasts
#Create forest plot for differences of treatments within strains
CF_contrasts <- ggplot(df_CF, aes(x = Comparison, y = logHR, colour = Strain)) +
geom_point(size = 4) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.2, size = 1.1)+
coord_flip() +
scale_x_discrete(labels = c('N2 \n daf-2 - ev','SKN-1 \n daf-2 - ev'))+
labs(
title = "",
x = "Treatment comparison (within strain)",
y = "Hazard ratio (HR)"
) +
scale_colour_manual(values = c('#4DBBD5FF','#3C5488FF'))+
theme_minimal(base_size = 12)+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.position = 'none')
CF_contrasts
#Create forest plot for differences of treatments within strains
CF_NM_contrasts <- ggplot(df_CF_NM, aes(x = Comparison, y = logHR, colour = Strain)) +
geom_point(size = 4) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.2, size = 1.1)+
coord_flip() +
scale_x_discrete(labels = c('N2 \n daf-2 - ev','SKN-1 \n daf-2 - ev'))+
labs(
title = "",
x = "Treatment comparison (within strain)",
y = "Log hazard ratio (HR)"
) +
scale_colour_manual(values = c('#4DBBD5FF','#3C5488FF'))+
theme_minimal(base_size = 12)+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.position = 'none')
#Create forest plot for differences of treatments within strains
CF_contrasts <- ggplot(df_CF, aes(x = Comparison, y = logHR, colour = Strain)) +
geom_point(size = 4) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.2, size = 1.1)+
coord_flip() +
scale_x_discrete(labels = c('N2 \n daf-2 - ev','SKN-1 \n daf-2 - ev'))+
labs(
title = "",
x = "Treatment comparison (within strain)",
y = "Log hazard ratio (HR)"
) +
scale_colour_manual(values = c('#4DBBD5FF','#3C5488FF'))+
theme_minimal(base_size = 12)+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.position = 'none')
CF_contrasts
Anova(HF_NM_cox, type = 'III')
summary(HF_NM_cox)
#test model
plot(cox.zph(HF_NM_cox))
cox.zph(HF_NM_cox)
#Mixed effects cox proportional hazards model to test effect of treatment on survival prob
CF_NM_cox <- coxme(Surv(Age, Event) ~ Strain * Treatment.ID + (1|Plate.ID), data = thermo_CF_LSNM)
summary(CF_NM_cox)
cox.zph(CF_NM_coz)
cox.zph(CF_NM_cox)
#test model
plot(cox.zph(CF_NM_cox))
Anova(CF_NM_cox, type = 'III')
plot(cox.zph(CF_cox))
summary(CF_cox)
Anova(CF_cox, type = 'III')
View(SKN_25)
#Combine temperature and treatment to account for thermocycling daf-2 as its own treatment category
SKN_25 <- SKN_25 %>%
unite(Treatment.ID, Temperature, remove = F)
head(SKN_25)
#Combine temperature and treatment to account for thermocycling daf-2 as its own treatment category
SKN_25 <- SKN_25 %>%
unite(Tr_temp, 'Treatment.ID', 'Temperature', remove = F)
head(SKN_25)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Tr_temp + (1|Plate.ID), data = SKN_25)
View(SKN_25)
levels(SKN_25$Tr_temp)
SKN_25$Tr_temp <- as.factor(SKN_25$Tr_temp)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Tr_temp + (1|Plate.ID), data = SKN_25)
levels(SKN_25$Tr_temp)
View(SKN_25)
#Temperature as a factor
SKN_15_25_LS$Temperature <- as.factor(SKN_15_25_LS$Temperature)
#Get only 25C data
SKN_25 <- SKN_15_25_LS %>%
filter(Temperature != '15' & Temperature != '15F')
View(SKN_25)
#Combine Strain and treatment for plotting
SKN_25 <- SKN_25 %>%
unite(Str_tr, 'Strain','Treatment.ID', remove = F)
#Also combine temperature with strain and treatment
SKN_25 <- SKN_25 %>%
unite(Str_tr_temp, 'Str_tr', 'Temperature', remove = F)
#Rename factor levels
SKN_25$Str_tr_temp <- factor(SKN_25$Str_tr_temp, levels = c('N2_ev_25','N2_daf_25','SKN_ev_25','SKN_daf_25','SKN_daf_25F'))
#Ensure it's a factor
SKN_25$Str_tr_temp <- as.factor(SKN_25$Str_tr_temp)
#Set ev N2 with 25C only as reference level
SKN_25$Str_tr_temp <- relevel(SKN_25$Str_tr_temp, ref = 'N2_ev_25')
#Also try excluding explosions - see if it effects results
SKN_25_NMNE <- SKN_25 %>%
filter(Cause != 'E' & Cause != 'M')
#Combine temperature and treatment to account for thermocycling daf-2 as its own treatment category
SKN_25 <- SKN_25 %>%
unite(Tr_temp, 'Treatment.ID', 'Temperature', remove = F)
head(SKN_25)
SKN_25$Tr_temp <- as.factor(SKN_25$Tr_temp)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Tr_temp + (1|Plate.ID), data = SKN_25)
levels(SKN_25$Tr_temp)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Treatment.ID * Temperature + (1|Plate.ID), data = SKN_25)
View(SKN_25)
levels(SKN_25$Temperature)
SKN_25$Temperature <- droplevels(SKN_25$Temperature)
levels(SKN_25$Temperature)
levels(SKN_25$Tr_temp)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Treatment.ID * Temperature + (1|Plate.ID), data = SKN_25)
levels(SKN_25$Treatment.ID)
View(SKN_25)
SKN_25$Treatment.ID <- as.factor(SKN_25$Treatment.ID)
levels(SKN_25$Treatment.ID)
#Combine temperature and treatment to account for thermocycling daf-2 asits own treatment category
SKN_25 <- SKN_25 %>%
unite(Tr_temp, 'Treatment.ID', 'Temperature', remove = F)
head(SKN_25)
SKN_25$Tr_temp <- as.factor(SKN_25$Tr_temp)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Treatment.ID * Temperature + (1|Plate.ID), data = SKN_25)
SKN_25 <- na.omit(SKN_25)
SKN_25 <- droplevels.data.frame(SKN_25)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Treatment.ID * Temperature + (1|Plate.ID), data = SKN_25)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Tr_temp + (1|Plate.ID), data = SKN_25)
SKN_25$Tr_temp <- droplevels(SKN_25$Tr_temp)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Tr_temp + (1|Plate.ID), data = SKN_25)
SKN_25$Strain <- droplevels(SKN_25$Strain)
SKN_25$Strain <- as.factor(SKN_25$Strain)
SKN_25$Strain <- droplevels(SKN_25$Strain)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Tr_temp + (1|Plate.ID), data = SKN_25)
View(SKN_25)
SKN_25$Plate.ID <- as.factor(SKN_25$Plate.ID)
SKN_25$Plate.ID <- droplevels(SKN_25$Plate.ID)
#Cox mixed effects model with interaction between Strain and Tr_temp
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Strain * Tr_temp + (1|Plate.ID), data = SKN_25)
#Including matricides
cox_SKN_25 <- coxme(Surv(Age, Event) ~ Str_tr_temp + (1|Plate.ID), data = SKN_25)
#test model
cox.zph(cox_SKN_25)#not OK
#Forest plot
SKN_25_forest <- meforest(cox_SKN_25, 'N2_ev_25')
#Cox mixed effects model
cox_SKN_25_NM <- coxme(Surv(Age, Event) ~ Str_tr_temp + (1|Plate.ID), data = SKN_25_NM)
#test model with plot too
cox.zph(cox_SKN_25_NM)#OK - but only just acceptable
plot(cox.zph(cox_SKN_25_NM))
#create forest plot
SKN_25_NM_forest <- meforest(cox_SKN_25_NM, 'N2_ev_25')
SKN_25_NM_forest
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(glmmTMB)
library(car)
library(popbio)
library(ggplot2)
library(ggbeeswarm)
library(shades)
library(RColorBrewer)
library(DHARMa)
library(Rmisc)
library(dabestr)
library(magrittr)
library(tidyr)
library(dplyr)
library(ggeffects)
library(lme4)
library(optimx)
library(nloptr)
library(dfoptim)
library(data.table)
library(pscl)
library(ggThemeAssist)
library(DHARMa)
library(emmeans)
library(ggpubr)
library(patchwork)
library(lubridate)
library(survival)
library(coxme) #for cox model
library(ggplot2)
library(purrr) #for forestplot
library(ggpubr) #for forestplot
library(survminer) #for forestplot
library(AICcmodavg)
library(permutes)
library(performance)
library(fields)
library(grid)
library(ggplotify)
library(cowplot)
library(eha)
library(multcomp)
library(usethis)})#
#24-hour 15 to 25C thermocycling experiments, HF = 25C first, CF = 15C first, LS = lifespan, rep = reproduction
thermo_HF_rep <- read.csv('Thermo_H_rep.csv')
thermo_HF_LS <- read.csv('Thermo_H_LS.csv')
thermo_CF_rep <- read.csv('Thermo_C_rep.csv')
thermo_CF_LS <- read.csv('Thermo_C_LS.csv')
#SKN-1 mutants with and without daf-2 RNAi KD in 20C - LS = lifespan, rep = reproduction
SKN_20C_rep <- read.csv('SKN1_20C_repro.csv')
SKN_20C_LS <- read.csv('SKN1_20C_LS.csv')
#Lifespan experiment SKN-1 mutants with and without daf-2 RNAi KD in 15 and 25C, with additional treatment of daf-2 RNAi KD SKN-1 mutants starting with 24 hrs of opposite temperature to test effects of temperature on early development of SKN-1 mutants
SKN_15_25_LS <- read.csv('SKN_N2_LS_15_25.csv')
#Dataframe into long form
thermo_c_long <- thermo_CF_rep %>%
pivot_longer(
cols = c(`D1`,`D2`, `D3`, `D4`, `D5`,`D6`, `D7`,`D8`,`D9`),
names_to = "Day",
values_to = "value")
#Remove unneeded columns
thermo_c_long <- thermo_c_long %>%
dplyr::select(c('ID','Strain', 'Treatment','Day','value'))
#Remove NAs
thermo_c_long <- na.omit(thermo_c_long)
#Combine strain and treatment into one variable for plotting
thermo_c_long <- thermo_c_long %>%
unite(Str_tr, c('Strain', 'Treatment'), remove = F)
#Set levels of StrainxTreatment
thermo_c_long$Str_tr <- factor(thermo_c_long$Str_tr, levels = c("N2_ev", "N2_daf", "SKN-1_ev", "SKN-1_daf"))
#Create colour palette
palette <- c('#E64B35FF','#4DBBD5FF', '#00A087FF', '#3C5488FF')
#Make sure Day is a factor
thermo_c_long$Day <- as.factor(thermo_c_long$Day)
#Change day to a numeric variable for analysis
levels(thermo_c_long$Day) <- list('1' = 'D1', '2' = 'D2', '3' = 'D3', '4' = 'D4', '5' = 'D5', '6' = 'D6', '7' = 'D7', '8' = 'D8', '9' = 'D9')
thermo_c_long$Day <- as.numeric(thermo_c_long$Day)
#Analyse age-specific repro - use glmmTMB negative binomial due to high level of zeroes
CF_m1 <- glmmTMB(value ~ Strain *Treatment*Day + (1|ID), family = nbinom1, data = thermo_c_long)
#SImulate residuals again to test model
CF_sim2 <- simulateResiduals(CF_m2, plot = T)
#SImulate residuals again to test model
CF_sim2 <- simulateResiduals(CF_m2, plot = T)
#Add zero-inflation parameter
CF_m2 <- glmmTMB(value ~ Strain * Treatment * Day + (1|ID), ziformula = ~ Day, family = 'nbinom1', data = thermo_c_long)
summary(CF_m2)
#Get chi-squared using type III Anova to account for interaction
Anova(CF_m2, type = 'III')
summary(CF_m2)
#Get chi-squared using type III Anova to account for interaction
Anova(CF_m2, type = 'III')
#Set ev as reference treatment level
thermo_c_long$Treatment <- relevel(thermo_c_long$Treatment, ref = 'ev')
#Set ev as reference treatment level
thermo_c_long$Treatment <- as.factor(thermo_c_long$Treatment)
thermo_c_long$Treatment <- relevel(thermo_c_long$Treatment, ref = 'ev')
#Add zero-inflation parameter
CF_m2 <- glmmTMB(value ~ Strain * Treatment * Day + (1|ID), ziformula = ~ Day, family = 'nbinom1', data = thermo_c_long)
summary(CF_m2)
summary(CF_m2)
#Get chi-squared using type III Anova to account for interaction
Anova(CF_m2, type = 'III')
#Combine Strain and Treatment into one variable for plotting
thermo_HF_LS <- thermo_HF_LS %>%
unite(Str_tr, c('Strain', 'Treatment.ID'), remove = F)
#Make sure it's a factor
thermo_HF_LS$Str_tr <- as.factor(thermo_HF_LS$Str_tr)
#Set N2 Ev as reference level
thermo_HF_LS$Str_tr <- relevel(thermo_HF_LS$Str_tr, ref = 'N2_ev')
#FIlter out unnatural deaths (Loss, walling, explosions)
thermo_HF_LS <- thermo_HF_LS %>%
filter(thermo_HF_LS$Cause != 'L' & thermo_HF_LS$Cause !='W' & thermo_HF_LS$Cause != 'E')
#name factor levels of Str_tr
thermo_HF_LS$Str_tr <- factor(thermo_HF_LS$Str_tr, levels = c("N2_ev", "N2_daf", "SKN-1_ev", "SKN-1_daf"))
#Check what Age is classed as
class(thermo_HF_LS$Age)
#Change to numeric
thermo_HF_LS$Age <- as.numeric(thermo_HF_LS$Age)
#Create survival object
surv<-survfit(Surv(Age,Event)~Str_tr,data=thermo_HF_LS)
#Create a binary variable for matricides (1 = matricide, 0 = no matricide) to analyse with logistic regression
thermo_HF_LS$Matricide <- as.numeric(thermo_HF_LS$Cause == 'M')
#Sometimes NAs are produced creating an additional non-existent factor level - omit NAs first
thermo_HF_LS <- na.omit(thermo_HF_LS)
thermo_HF_LSNM <- na.omit(thermo_HF_LS)
#Drop non-existent factor level - or cox models get confused
thermo_HF_LS$Str_tr <- droplevels(thermo_HF_LS$Str_tr)
levels(thermo_HF_LS$Str_tr)
thermo_HF_LSNM$Str_tr <- droplevels(thermo_HF_LSNM$Str_tr)
#Mixed effects cox proportional hazards model to test effect of treatment on survival probability
HF_cox <- coxme(Surv(Age, Event) ~ Strain * Treatment.ID + (1|Plate.ID), data = thermo_HF_LS)
#Test model
cox.zph(HF_cox)#Strain * Treatment is fine
summary(HF_cox)
#Mixed effects cox proportional hazards model to test effect of treatment on survival prob
HF_NM_cox <- coxme(Surv(Age, Event) ~ Strain * Treatment.ID + (1|Plate.ID), data = thermo_HF_LSNM)
summary(HF_NM_cox)
Anova(HF_NM_cox, type = 'III')
#test model
plot(cox.zph(HF_NM_cox))
cox.zph(HF_NM_cox)#compare to an EH analysis
#Put dataframe into long form
thermo_h_long <- thermo_HF_rep %>%
pivot_longer(
cols = c(`D1`,`D2`, `D3`, `D4`, `D5`,`D6`, `D7`,`D8`,`D9`),
names_to = "Day",
values_to = "value")
#Keep only columns that are necessary
thermo_h_long <- thermo_h_long %>%
dplyr::select(c('ID','Strain', 'Treatment','Day','value'))
#Get rid of NAs
thermo_h_long <- na.omit(thermo_h_long)
#Create a combined strain and treatment column for plotting
thermo_h_long <- thermo_h_long %>%
unite(Str_tr, c('Strain', 'Treatment'), remove = F)
#Set factor levels for Strain x Treatment
thermo_h_long$Str_tr <- factor(thermo_h_long$Str_tr, levels = c("N2_ev", "N2_daf", "SKN-1_ev", "SKN-1_daf"))
#Age-specific reproduction plot
thermo_H_p <-ggplot(data=thermo_h_long, aes(x=factor(Day), y=value, group=Str_tr, color=Str_tr))+
geom_jitter(alpha = 0.2, position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.5))+
stat_summary(fun.data="mean_cl_boot", geom="errorbar", size = 1.2, width=0.0, position = position_dodge(0.5)) +
stat_summary(fun.data="mean_cl_boot", geom="point", size = 3, position = position_dodge(0.5)) +
stat_summary(fun.data="mean_cl_boot", geom="line",  size=1.2, position = position_dodge(0.5)) +
theme_classic()+
labs(y="Offspring number", x="")+
labs(col="")+
labs(title = 'Start 25\u00B0C')+
theme(plot.title = element_text(size = 16))+
theme(axis.title.y = element_text(size=16))+
theme(axis.title.x = element_text(size=16))+
theme(axis.text= element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
scale_color_manual(values=palette)+
theme(legend.key.width = unit(0.5,"cm"))+
coord_cartesian(ylim = c(0,225))+
theme(legend.position = c(0.8, 0.9))
thermo_H_p
#Make sure Day is a factor
thermo_h_long$Day <- as.factor(thermo_h_long$Day)
#Change day to a numeric variable for analysis
levels(thermo_h_long$Day) <- list('1' = 'D1', '2' = 'D2', '3' = 'D3', '4' = 'D4', '5' = 'D5', '6' = 'D6', '7' = 'D7', '8' = 'D8', '9' = 'D9')
thermo_h_long$Day <- as.numeric(thermo_h_long$Day)
#Try using splines in ziformula
library(splines)
HF_m11 <- glmmTMB(value ~ Strain*Treatment + Strain*Day + Treatment*Day + (1|ID), ziformula =~ ns(Day, df = 3), family = nbinom2(), data = thermo_h_long)
summary(HF_m11)
Anova(HF_m11, type = 'III')
#put data into long form
skn_long <- SKN_20C_rep %>%
pivot_longer(
cols = c(`D1`, `D2`, `D3`, `D4`, `D5`),
names_to = "Day",
values_to = "value")
#select only columns needed
skn_long <- skn_long %>%
dplyr::select(c('ID','Treatment','Day','value'))
#get rid of NAs
skn_long <- na.omit(skn_long)
#age-specific reproduction plot for SKN-1 mutants with daf or ev
skn_20C_p <-ggplot(data=skn_long, aes(x=factor(Day), y=value, group=Treatment, color=Treatment))+
geom_jitter(alpha = 0.2, position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.5))+
stat_summary(fun.data="mean_cl_boot", geom="errorbar", size = 1.2, width=0.0, position = position_dodge(0.5)) +
stat_summary(fun.data="mean_cl_boot", geom="point", size = 3, position = position_dodge(0.5)) +
stat_summary(fun.data="mean_cl_boot", geom="line",  size=1.2, position = position_dodge(0.5)) +
theme_classic()+
labs(y="Offspring number", x="")+
labs(col="")+
theme(axis.title.y = element_text(size=20))+
theme(axis.title.x = element_text(size=20))+
theme(axis.text= element_text(size = 18))+
theme(legend.text = element_text(size = 18))+
scale_color_manual(values=c('#4DBBD5FF','#E64B35FF'))+
theme(legend.key.width = unit(0.5,"cm"))+
coord_cartesian(ylim = c(0,225))+
theme(legend.position = c(0.1, 0.9))
skn_20C_p
#sum up total number of offspring produced over experiment per individual
totalrep_SKN<-na.omit(as.data.frame.table(tapply(skn_long$value,list(skn_long$Treatment, skn_long$ID),sum)))
#rename columns
names(totalrep_SKN)<-c("Treatment", "Replicate", "Totrep")
#rename factor levels of treatment
totalrep_SKN$Treatment <- revalue(totalrep_SKN$Treatment, c('ev' = 'ev', 'daf' = 'daf-2'))
#create dabestr object for plotting cumming estimation
totrep_SKN_dab <-
totalrep_SKN %>%
load(x =Treatment, y=Totrep,
idx = c('ev','daf-2'))
#get mean differences for plot
totrep_SKN_p <- mean_diff(totrep_SKN_dab)
#cumming estimation plot for LRS in SKN-1 at 20C with daf or ev
tot_rep_SKN_plot <- dabest_plot(totrep_SKN_p, FALSE, raw_marker_spread = 1, swarm_label = 'LRS',custom_palette = 'npg', swarm_x_text = 16, swarm_y_text = 14, contrast_y_text = 16, contrast_x_text = 14, raw_marker_alpha = 0.3, tufte_size = 1 )
tot_rep_SKN_plot
#Create dataframe containing Sum of total reproduction for each individual
totalrep_CF<-na.omit(as.data.frame.table(tapply(thermo_c_long$value,list(thermo_c_long$Strain, thermo_c_long$Treatment, thermo_c_long$Str_tr, thermo_c_long$ID),sum)))
#rename columns
names(totalrep_CF)<-c('Strain', 'Treatment', "Str_tr", "Replicate", "Totrep")
#Set factor levels for
totalrep_CF$Str_tr <- factor(totalrep_CF$Str_tr, levels = c("N2_ev", "N2_daf", "SKN-1_ev", "SKN-1_daf"))
#Create dabestr object for plotting bootstrap estimations
totrep_CF_dab <-
totalrep_CF %>%
load(x =Str_tr, y=Totrep,
idx = c('N2_ev','N2_daf', 'SKN-1_ev','SKN-1_daf'))
#Get mean differences from dabestr object for plotting
totrep_CF_dab_p <- mean_diff(totrep_CF_dab)
#Create Cumming estimation plot
tot_rep_plot_CF <- dabest_plot(totrep_CF_dab_p, FALSE, raw_marker_spread = 1, swarm_label = 'LRS',custom_palette = 'npg', swarm_x_text = 12, swarm_y_text = 12, contrast_y_text = 12, contrast_x_text = 12, raw_marker_alpha = 0.3, tufte_size = 1 )
tot_rep_plot_CF
#Check distribution
hist(totalrep_CF$Totrep)#close to normal
#Analyse LRS with linear model
LRS_CF <- lm(Totrep ~ Strain * Treatment, data = totalrep_CF)
#Simulate residuals
LRS_CF_sim1 <- simulateResiduals(LRS_CF, plot = T)#looks good
summary(LRS_CF)#no effect, try removing interaction
LRS_CF2 <- lm(Totrep ~ Strain + Treatment, data = totalrep_CF)
#Simulate residuals
LRS_CF_sim2 <- simulateResiduals(LRS_CF2, plot = T)#OK
summary(LRS_CF2)#trend toward higher LRS in SKN-1
#Use type II anova to get chi-squared
Anova(LRS_CF2, type = 'II')
#Put dataframe into long form
thermo_h_long <- thermo_HF_rep %>%
pivot_longer(
cols = c(`D1`,`D2`, `D3`, `D4`, `D5`,`D6`, `D7`,`D8`,`D9`),
names_to = "Day",
values_to = "value")
#Keep only columns that are necessary
thermo_h_long <- thermo_h_long %>%
dplyr::select(c('ID','Strain', 'Treatment','Day','value'))
#Get rid of NAs
thermo_h_long <- na.omit(thermo_h_long)
#Create a combined strain and treatment column for plotting
thermo_h_long <- thermo_h_long %>%
unite(Str_tr, c('Strain', 'Treatment'), remove = F)
#Set factor levels for Strain x Treatment
thermo_h_long$Str_tr <- factor(thermo_h_long$Str_tr, levels = c("N2_ev", "N2_daf", "SKN-1_ev", "SKN-1_daf"))
#Age-specific reproduction plot
thermo_H_p <-ggplot(data=thermo_h_long, aes(x=factor(Day), y=value, group=Str_tr, color=Str_tr))+
geom_jitter(alpha = 0.2, position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.5))+
stat_summary(fun.data="mean_cl_boot", geom="errorbar", size = 1.2, width=0.0, position = position_dodge(0.5)) +
stat_summary(fun.data="mean_cl_boot", geom="point", size = 3, position = position_dodge(0.5)) +
stat_summary(fun.data="mean_cl_boot", geom="line",  size=1.2, position = position_dodge(0.5)) +
theme_classic()+
labs(y="Offspring number", x="")+
labs(col="")+
labs(title = 'Start 25\u00B0C')+
theme(plot.title = element_text(size = 16))+
theme(axis.title.y = element_text(size=16))+
theme(axis.title.x = element_text(size=16))+
theme(axis.text= element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
scale_color_manual(values=palette)+
theme(legend.key.width = unit(0.5,"cm"))+
coord_cartesian(ylim = c(0,225))+
theme(legend.position = c(0.8, 0.9))
thermo_H_p
#Change day to a numeric variable for analysis
levels(thermo_h_long$Day) <- list('1' = 'D1', '2' = 'D2', '3' = 'D3', '4' = 'D4', '5' = 'D5', '6' = 'D6', '7' = 'D7', '8' = 'D8', '9' = 'D9')
thermo_h_long$Day <- as.numeric(thermo_h_long$Day)
#Calculate total reproduction over experiment per individual
totalrep_HF<-na.omit(as.data.frame.table(tapply(thermo_h_long$value,list(thermo_h_long$Strain, thermo_h_long$Treatment, thermo_h_long$Str_tr, thermo_h_long$ID),sum)))
library(ggeffects)
#rename columns
names(totalrep_HF)<-c('Strain','Treatment',"Str_tr", "Replicate", "Totrep")
#change factor levels
totalrep_HF$Str_tr <- factor(totalrep_HF$Str_tr, levels = c("N2_ev", "N2_daf", "SKN-1_ev", "SKN-1_daf"))
#Create dabestr object for Cumming estimation plot
totrep_HF_dab <-
totalrep_HF %>%
load(x =Str_tr, y=Totrep,
idx = c('N2_ev','N2_daf', 'SKN-1_ev','SKN-1_daf'))
#Get mean differences for estimation plot
totrep_HF_p <- mean_diff(totrep_HF_dab)
#Create bootstrap estimation plot
tot_rep_plot_HF <- dabest_plot(totrep_HF_p, FALSE, raw_marker_spread = 1, swarm_label = 'LRS',custom_palette = 'npg', swarm_x_text = 12, swarm_y_text = 12, contrast_y_text = 12, contrast_x_text = 12, raw_marker_alpha = 0.3, tufte_size = 1 )
tot_rep_plot_HF
#Try removing interaction
LRS_HF_m2 <- lm(Totrep ~ Treatment + Strain, data = totalrep_HF)
summary(LRS_HF_m2)#SKN-1 have (significantly) lower LRS now in hot first
Anova(LRS_HF_m2, type = 'II')
totalrep_HF$Treatment <- relevel(totalrep_HF$Treatment, ref = 'ev')
#Try removing interaction
LRS_HF_m2 <- lm(Totrep ~ Treatment + Strain, data = totalrep_HF)
summary(LRS_HF_m2)#SKN-1 have (significantly) lower LRS now in hot first
Anova(LRS_HF_m2, type = 'II')
summary(LRS_HF_m2)#SKN-1 have (significantly) lower LRS now in hot first
Anova(LRS_HF_m2, type = 'II')
